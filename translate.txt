Годувати тварин
Будь ласка, зверніть увагу: прочитайте інструкцію перед початком.

Всі тварини люблять смачну їжу. Давайте створимо новий клас,
щоб годувати їх. Створіть клас Animal, конструктор якого приймає
три аргументи:

name- назва тварини
appetite- ціле число, яке показує, скільки очок їжі потрібно
з'їсти цій тварині, щоб насититися.
is_hungry- логічне значення, яке показує, чи готова тварина
до їжі зі Trueзначенням за замовчуванням.
Animalповинен мати два методи:

print_name- потрібно надрукувати назву в такому
форматі:Hello, I'm {name}
feed- має надрукувати Eating {appetite} food points...,
встановити та is_hungryповернути Falseкількість з’їдених балів їжі,
 якщо тварина голодна. В іншому випадку він повинен повернути 0 і
  нічого не друкувати.
приклад:

lion = Animal("Lion", 25)
lion.print_name()  # "Hello, I'm Lion"
food_points = lion.feed()  # "Eating 25 food points..."
print(food_points)  # 25
print(lion.is_hungry)  # False
print(lion.feed())  # 0
Загальновідомий факт, що всі коти з'їдають 3 точки їжі за раз.
 Крім того, вони можуть зловити мишу. Напишіть Catклас, який є
 дочірнім для Animal. Він повинен мати конструктор із
 двома аргументами:

name- ім'я кота
is_hungry- зі Trueзначенням за замовчуванням
Примітка: вам потрібно викликати конструктор суперкласу
 з appetiteрівним 3.

Catмає мати лише один додатковий метод, catch_mouseякий
 має друкувати The hunt began!

приклад:

cat = Cat("Cat")
cat.print_name()  # "Hello, I'm Cat"
cat.feed()  # "Eating 3 food points"

cat2 = Cat("Cat", False)
print(cat2.feed())  # 0
cat2.catch_mouse()  # "The hunt began!"
Останній клас, який ви повинні реалізувати, це Dogклас.
 Його конструктор повинен мати два аргументи:

name- ім'я собаки
is_hungry- зі Trueзначенням за замовчуванням
Усі собаки повинні мати appetiteрівне 7.

Dogповинен мати один додатковий метод bring_slippers,
який повинен друкувати The slippers delivered!

приклад:

dog = Dog("Dog")
dog.print_name()  # "Hello, I'm Dog"
dog.feed()  # "Eating 7 food points"

dog2 = Dog("Dog", False)
print(dog2.feed())  # 0
dog2.bring_slippers()  # "The slippers delivered!"
Тепер настав час годувати багато тварин одночасно.
 Реалізувати feed_animalsфункцію, яка приймає список тварин.
  Він повинен нагодувати тварин, що пройшли, і повернути суму
  очок їжі, які необхідні, щоб нагодувати всіх голодних тварин
  із цього списку.

приклад:

cat = Cat("Cat", False)
lion = Animal("Lion", 25, True)
dog = Dog("Dog")
feed_animals([cat, lion, dog]) == 32